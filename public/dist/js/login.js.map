{
  "version": 3,
  "sources": ["../../src/js/login.js"],
  "sourcesContent": ["const Home = document.querySelector('.contentsSec')\n\n\n\n\n\nif(Home){\n  console.log('present')\n}\n\n\n(lgpg = () => {\n  const lgpgobsrvr = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      mutation.addedNodes.forEach((node) => {\n        const nodelgn_Btn = node.matches?.(\".lgn_Btn\")\n          ? node\n          : node.querySelector?.(\".lgn_Btn\");\n\n        if (nodelgn_Btn) {\n            console.log(\"loginbtm present\")\n          const eml_inpt = document.querySelector('.lgn_eml_inpt')\n          const psswd_inpt = document.querySelector('.lgn_psswd_inpt')\n          const cfmpsswd_inpt = document.querySelector('.lgn_cfmpsswd_inpt')\n        const sgnpLink = document.querySelector(\".sgnpLink\")\n\n\n\n//Link signup\nsgnpLink.addEventListener(\"click\", ()=>{\n  fetch('/app/sgnpg', {\n      method: 'GET',\n      headers: {\n      'Content-Type': 'application/json',\n      // 'Authorization': 'Bearer YOUR_TOKEN',\n      }\n     })\n      .then(response => response.text())\n        .then(data => {\n          Home.innerHTML = data;\n      })\n      .catch(error => console.error('Error:', error));\n})\n\n\n//Login form\n         nodelgn_Btn.addEventListener('click' , () => {\n           console.log(\"submit form:\")\n           console.log(eml_inpt.value,\n                       psswd_inpt.value, cfmpsswd_inpt.value)\n           const lgdata ={\n             eml: eml_inpt.value,\n             pwd: psswd_inpt.value,\n             conf_pwd: cfmpsswd_inpt.value\n           }\n\n           console.log(lgdata)\n\n            fetch(\"/usr/lgn\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              // 'Authorization': 'Bearer YOUR_TOKEN',\n            },\n            body: JSON.stringify(lgdata),\n          })\n                 .then((response) => response.json())\n            .then((data) => {\n              //erMgs.innerHTML = data;\n                //erMgs.style.display = \"block\";\n                console.log(data.erMgs);\n            })\n            .catch((error) => console.log(error));\n\n\n             if (sgnpLink) {\n                 console.log(\"here\")\n             }\n         });\n\n        }\n      });\n    });\n  });\n\n  lgpgobsrvr.observe(Home, { childList: true, subtree: true });\n})();\n"],
  "mappings": "+EAAA,IAAMA,EAAO,SAAS,cAAc,cAAc,EAM/CA,GACD,QAAQ,IAAI,SAAS,GAItB,KAAOC,EAAA,IAAM,CACO,IAAI,iBAAkBC,GAAc,CACrDA,EAAU,QAASC,GAAa,CAC9BA,EAAS,WAAW,QAASC,GAAS,CACpC,IAAMC,EAAcD,EAAK,UAAU,UAAU,EACzCA,EACAA,EAAK,gBAAgB,UAAU,EAEnC,GAAIC,EAAa,CACb,QAAQ,IAAI,kBAAkB,EAChC,IAAMC,EAAW,SAAS,cAAc,eAAe,EACjDC,EAAa,SAAS,cAAc,iBAAiB,EACrDC,EAAgB,SAAS,cAAc,oBAAoB,EAC7DC,EAAW,SAAS,cAAc,WAAW,EAK3DA,EAAS,iBAAiB,QAAS,IAAI,CACrC,MAAM,aAAc,CAChB,OAAQ,MACR,QAAS,CACT,eAAgB,kBAEhB,CACD,CAAC,EACC,KAAKC,GAAYA,EAAS,KAAK,CAAC,EAC9B,KAAKC,GAAQ,CACZX,EAAK,UAAYW,CACrB,CAAC,EACA,MAAMC,GAAS,QAAQ,MAAM,SAAUA,CAAK,CAAC,CACpD,CAAC,EAIQP,EAAY,iBAAiB,QAAU,IAAM,CAC3C,QAAQ,IAAI,cAAc,EAC1B,QAAQ,IAAIC,EAAS,MACTC,EAAW,MAAOC,EAAc,KAAK,EACjD,IAAMK,EAAQ,CACZ,IAAKP,EAAS,MACd,IAAKC,EAAW,MAChB,SAAUC,EAAc,KAC1B,EAEA,QAAQ,IAAIK,CAAM,EAEjB,MAAM,WAAY,CAClB,OAAQ,OACR,QAAS,CACP,eAAgB,kBAElB,EACA,KAAM,KAAK,UAAUA,CAAM,CAC7B,CAAC,EACO,KAAMH,GAAaA,EAAS,KAAK,CAAC,EACvC,KAAMC,GAAS,CAGZ,QAAQ,IAAIA,EAAK,KAAK,CAC1B,CAAC,EACA,MAAOC,GAAU,QAAQ,IAAIA,CAAK,CAAC,EAG/BH,GACA,QAAQ,IAAI,MAAM,CAE1B,CAAC,CAEF,CACF,CAAC,CACH,CAAC,CACH,CAAC,EAEU,QAAQT,EAAM,CAAE,UAAW,GAAM,QAAS,EAAK,CAAC,CAC7D,EA3EQ,SA2EL",
  "names": ["Home", "__name", "mutations", "mutation", "node", "nodelgn_Btn", "eml_inpt", "psswd_inpt", "cfmpsswd_inpt", "sgnpLink", "response", "data", "error", "lgdata"]
}
